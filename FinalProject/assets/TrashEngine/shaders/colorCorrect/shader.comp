#version 450


layout (location = 0) uniform sampler2D u_rawSceneTexture;

uniform ivec2 u_outputSize;
layout (location = 1) uniform writeonly image2D u_outImage;

uniform float u_exposure;

vec3 ACESToneMapping(vec3 color, float adapted_lum)
{
	const float A = 2.51f;
	const float B = 0.03f;
	const float C = 2.43f;
	const float D = 0.59f;
	const float E = 0.14f;

	color *= adapted_lum;
	return (color * (A * color + B)) / (color * (C * color + D) + E);
}
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main() {

	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
	vec2 texelSize = 1.0 / vec2(u_outputSize);
	vec2 texCoord = vec2(pixel_coords) * texelSize;
	
	vec4 rawSceneColor = texture(u_rawSceneTexture, texCoord);

	// exposure
	rawSceneColor.rgb = vec3(1.0) - exp(-rawSceneColor.rgb * u_exposure);
	
	rawSceneColor.rgb = ACESToneMapping(rawSceneColor.rgb, 1.0);
	// gamma correction
	const float gamma = 2.2;
	rawSceneColor.rgb = pow(rawSceneColor.rgb, vec3(1.0 / gamma));
	
	imageStore(u_outImage, pixel_coords, rawSceneColor);
	
}

